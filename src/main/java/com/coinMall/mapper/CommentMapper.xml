<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coinMall.dao.CommentMapper">
  <resultMap id="BaseResultMap" type="com.coinMall.pojo.Comment">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="comment_id" jdbcType="BIGINT" property="commentId" />
    <result column="source_id" jdbcType="INTEGER" property="sourceId" />
    <result column="about_id" jdbcType="VARCHAR" property="aboutId" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="comment_time" jdbcType="TIMESTAMP" property="commentTime" />
    <result column="comment_ip" jdbcType="VARCHAR" property="commentIp" />
    <result column="ip_area" jdbcType="VARCHAR" property="ipArea" />
    <result column="comment_content" jdbcType="VARCHAR" property="commentContent" />
    <result column="comment_images" jdbcType="VARCHAR" property="commentImages" />
    <result column="have_images" jdbcType="INTEGER" property="haveImages" />
    <result column="comment_status" jdbcType="INTEGER" property="commentStatus" />
    <result column="reply_total" jdbcType="INTEGER" property="replyTotal" />
    <result column="praise_total" jdbcType="INTEGER" property="praiseTotal" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    comment_id, source_id, about_id, uid, parent_id, comment_time, comment_ip, ip_area, 
    comment_content, comment_images, have_images, comment_status, reply_total, praise_total
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from t_comment
    where comment_id = #{commentId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_comment
    where comment_id = #{commentId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.coinMall.pojo.Comment">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_comment (comment_id, source_id, about_id, 
      uid, parent_id, comment_time, 
      comment_ip, ip_area, comment_content, 
      comment_images, have_images, comment_status, 
      reply_total, praise_total)
    values (#{commentId,jdbcType=BIGINT}, #{sourceId,jdbcType=INTEGER}, #{aboutId,jdbcType=VARCHAR}, 
      #{uid,jdbcType=INTEGER}, #{parentId,jdbcType=BIGINT}, #{commentTime,jdbcType=TIMESTAMP}, 
      #{commentIp,jdbcType=VARCHAR}, #{ipArea,jdbcType=VARCHAR}, #{commentContent,jdbcType=VARCHAR}, 
      #{commentImages,jdbcType=VARCHAR}, #{haveImages,jdbcType=INTEGER}, #{commentStatus,jdbcType=INTEGER}, 
      #{replyTotal,jdbcType=INTEGER}, #{praiseTotal,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.coinMall.pojo.Comment">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        comment_id,
      </if>
      <if test="sourceId != null">
        source_id,
      </if>
      <if test="aboutId != null">
        about_id,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="commentTime != null">
        comment_time,
      </if>
      <if test="commentIp != null">
        comment_ip,
      </if>
      <if test="ipArea != null">
        ip_area,
      </if>
      <if test="commentContent != null">
        comment_content,
      </if>
      <if test="commentImages != null">
        comment_images,
      </if>
      <if test="haveImages != null">
        have_images,
      </if>
      <if test="commentStatus != null">
        comment_status,
      </if>
      <if test="replyTotal != null">
        reply_total,
      </if>
      <if test="praiseTotal != null">
        praise_total,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        #{commentId,jdbcType=BIGINT},
      </if>
      <if test="sourceId != null">
        #{sourceId,jdbcType=INTEGER},
      </if>
      <if test="aboutId != null">
        #{aboutId,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="commentTime != null">
        #{commentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="commentIp != null">
        #{commentIp,jdbcType=VARCHAR},
      </if>
      <if test="ipArea != null">
        #{ipArea,jdbcType=VARCHAR},
      </if>
      <if test="commentContent != null">
        #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="commentImages != null">
        #{commentImages,jdbcType=VARCHAR},
      </if>
      <if test="haveImages != null">
        #{haveImages,jdbcType=INTEGER},
      </if>
      <if test="commentStatus != null">
        #{commentStatus,jdbcType=INTEGER},
      </if>
      <if test="replyTotal != null">
        #{replyTotal,jdbcType=INTEGER},
      </if>
      <if test="praiseTotal != null">
        #{praiseTotal,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.coinMall.pojo.Comment">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_comment
    <set>
      <if test="sourceId != null">
        source_id = #{sourceId,jdbcType=INTEGER},
      </if>
      <if test="aboutId != null">
        about_id = #{aboutId,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="commentTime != null">
        comment_time = #{commentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="commentIp != null">
        comment_ip = #{commentIp,jdbcType=VARCHAR},
      </if>
      <if test="ipArea != null">
        ip_area = #{ipArea,jdbcType=VARCHAR},
      </if>
      <if test="commentContent != null">
        comment_content = #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="commentImages != null">
        comment_images = #{commentImages,jdbcType=VARCHAR},
      </if>
      <if test="haveImages != null">
        have_images = #{haveImages,jdbcType=INTEGER},
      </if>
      <if test="commentStatus != null">
        comment_status = #{commentStatus,jdbcType=INTEGER},
      </if>
      <if test="replyTotal != null">
        reply_total = #{replyTotal,jdbcType=INTEGER},
      </if>
      <if test="praiseTotal != null">
        praise_total = #{praiseTotal,jdbcType=INTEGER},
      </if>
    </set>
    where comment_id = #{commentId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.coinMall.pojo.Comment">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_comment
    set source_id = #{sourceId,jdbcType=INTEGER},
      about_id = #{aboutId,jdbcType=VARCHAR},
      uid = #{uid,jdbcType=INTEGER},
      parent_id = #{parentId,jdbcType=BIGINT},
      comment_time = #{commentTime,jdbcType=TIMESTAMP},
      comment_ip = #{commentIp,jdbcType=VARCHAR},
      ip_area = #{ipArea,jdbcType=VARCHAR},
      comment_content = #{commentContent,jdbcType=VARCHAR},
      comment_images = #{commentImages,jdbcType=VARCHAR},
      have_images = #{haveImages,jdbcType=INTEGER},
      comment_status = #{commentStatus,jdbcType=INTEGER},
      reply_total = #{replyTotal,jdbcType=INTEGER},
      praise_total = #{praiseTotal,jdbcType=INTEGER}
    where comment_id = #{commentId,jdbcType=BIGINT}
  </update>
  
  <!-- 加减点赞总数 -->
  <update id="updatePraiseTotal">
  	update t_comment
  	set praise_total = praise_total + #{number}
    where comment_id = #{commentId} and (praise_total + #{number}) >= 0
  </update>
  
  <!-- 加减点赞总数 -->
  <update id="updateReplyTotal">
  	update t_comment
  	set reply_total = reply_total + #{number}
    where comment_id = #{commentId} and (reply_total + #{number}) >= 0
  </update>
  
  
  <resultMap id="BaseAssociationPraise" type="com.coinMall.pojo.Comment">
    <id column="comment_id" jdbcType="BIGINT" property="commentId" />
    <result column="source_id" jdbcType="INTEGER" property="sourceId" />
    <result column="about_id" jdbcType="VARCHAR" property="aboutId" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="comment_time" jdbcType="TIMESTAMP" property="commentTime" />
    <result column="comment_ip" jdbcType="VARCHAR" property="commentIp" />
    <result column="ip_area" jdbcType="VARCHAR" property="ipArea" />
    <result column="comment_content" jdbcType="VARCHAR" property="commentContent" />
    <result column="comment_images" jdbcType="VARCHAR" property="commentImages" />
    <result column="have_images" jdbcType="INTEGER" property="haveImages" />
    <result column="comment_status" jdbcType="INTEGER" property="commentStatus" />
    <result column="reply_total" jdbcType="INTEGER" property="replyTotal" />
    <result column="praise_total" jdbcType="INTEGER" property="praiseTotal" />
    <association property="praise" javaType="com.coinMall.pojo.Praise">
    	<id column="praise_id" jdbcType="BIGINT" property="praiseId" />
	    <result column="comment_id" jdbcType="BIGINT" property="commentId" />
	    <result column="uid" jdbcType="INTEGER" property="uid" />
	    <result column="praise_type" jdbcType="INTEGER" property="praiseType" />
    </association>
  </resultMap>
  
  
  <sql id="sql_getCommentList">
  	<if test="parentId == null">
    	and ISNULL(tc.parent_id)
    </if>
    <if test="parentId != null and parentId != 0">
    	and tc.parent_id = #{parentId}
    </if>
    and tc.comment_status = 0
  </sql>
  <!-- 评论列表，优先级规则：有图>点赞数>评价时间倒序 -->
  <select id="getCommentList" resultMap="BaseAssociationPraise">
  	select 
    tc.*,tp.*
    from t_comment tc LEFT JOIN t_praise tp ON tc.comment_id = tp.comment_id and tp.uid = #{uid}
    <!-- <if test="parentId == null">主评论
	    and tp.praise_type = 1
    </if>
    <if test="parentId != null and parentId != 0">子评论
	    and tp.praise_type = 2
    </if> -->
    where tc.about_id = #{aboutId}
    <include refid="sql_getCommentList"></include>
    order by tc.have_images desc, tc.praise_total desc, tc.comment_time desc
    limit #{pageIndex}, #{pageSize}
  </select>
  
  <!-- 评论列表统计 -->
  <select id="getCommentListCount" resultType="int">
  	select 
    count(1)
    from t_comment tc
    where about_id = #{aboutId}
    <include refid="sql_getCommentList"></include>
  </select>
  
  <select id="getParentCommentById" resultMap="BaseAssociationPraise">
    select 
    tc.*,tp.*
    from t_comment tc LEFT JOIN t_praise tp ON tc.comment_id = tp.comment_id and tp.uid = #{uid}
    where tc.comment_id = #{commentId}
  </select>
</mapper>