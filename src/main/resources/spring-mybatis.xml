<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
                        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd 
                        http://www.springframework.org/schema/context 
                        http://www.springframework.org/schema/context/spring-context-4.2.xsd 
                        http://www.springframework.org/schema/aop 
                        http://www.springframework.org/schema/aop/spring-aop-4.2.xsd 
                        http://www.springframework.org/schema/mvc 
                        http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
                        http://www.springframework.org/schema/task
    					http://www.springframework.org/schema/task/spring-task-4.2.xsd"> 
    <import resource="classpath:spring-context-redis-ms.xml" />						
    <import resource="classpath:spring-httpclient.xml" />						
	<!-- 自动扫描 -->
	<context:component-scan base-package="com.coinMall.service"/>
	<context:component-scan base-package="com.coinMall.common"/>
	<task:annotation-driven scheduler="qbScheduler" mode="proxy"/>
    <task:scheduler id="qbScheduler" pool-size="10"/>
	<!-- 配置文件 -->
    <bean id="propertyConfigurer" class="com.coinMall.common.config.ServerPropertyPlaceholderConfigurer">
	    <property name="locations">
	       <list>
	       	  <value>classpath:DEV/environment.properties</value>
	          <value>classpath:DEV/jdbc.properties</value>
	          <value>classpath:DEV/redis.properties</value>
	          <value>classpath:DEV/httpclient.properties</value>
	          
	          <value>classpath:TEST/environment.properties</value>
	          <value>classpath:TEST/jdbc.properties</value>
	          <value>classpath:TEST/redis.properties</value>
	          <value>classpath:TEST/httpclient.properties</value>
	          
	          <value>classpath:PREPROD/environment.properties</value>
	          <value>classpath:PREPROD/jdbc.properties</value>
	          <value>classpath:PREPROD/redis.properties</value>
	          <value>classpath:PREPROD/httpclient.properties</value>
	          
	          <value>classpath:NPROD/environment.properties</value>
	          <value>classpath:NPROD/jdbc.properties</value>
	          <value>classpath:NPROD/redis.properties</value>
	          <value>classpath:NPROD/httpclient.properties</value>
	        </list>   
	    </property>
	    <property name="version" value="DEV"/>
    </bean>
	<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<!-- 线程池维护线程的最少数量 -->
		<property name="corePoolSize" value="1"/>
		<!-- 允许的空闲时间 -->
		<property name="keepAliveSeconds" value="200"/>
		<!-- 线程池维护线程的最大数量 -->
		<property name="maxPoolSize" value="20"/>
		<!-- 缓存队列 -->
		<property name="queueCapacity" value="40"/>
		<!-- 对拒绝task的处理策略 -->
		<property name="rejectedExecutionHandler">
			<bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
		</property>
	</bean>
	<bean id="dataSourceWrite" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${url_write}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
		<property name="connectionInitSqls" value="set names utf8mb4;"/>
		<property name="validationQuery" value="select 1" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="300000"/>
		<property name="numTestsPerEvictionRun" value="${maxActive}"/>
		<property name="minEvictableIdleTimeMillis" value="3600000"/>
	</bean>

	<bean id="dataSourceRead" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${driver}"/>
		<property name="url" value="${url_read}"/>
		<property name="username" value="${username}"/>
		<property name="password" value="${password}"/>
		<!-- 初始化连接大小 -->  
        <property name="initialSize" value="${initialSize}"></property>
        <!-- 连接池最大数量 -->  
        <property name="maxTotal" value="${maxActive}"></property>
        <!-- 连接池最大空闲 -->
        <property name="maxIdle" value="${maxIdle}"></property>
        <!-- 连接池最小空闲 -->  
        <property name="minIdle" value="${minIdle}"></property>
        <!-- 获取连接最大等待时间 -->  
        <property name="maxWaitMillis" value="${maxWait}"></property>
		<property name="connectionInitSqls" value="set names utf8mb4;"/>
		<property name="validationQuery" value="select 1" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="300000" />
		<property name="numTestsPerEvictionRun" value="${maxActive}" />
		<property name="minEvictableIdleTimeMillis" value="3600000" />
	</bean>
	
	<bean id="dynamicDataSource" class="com.coinMall.common.dataSource.DynamicDataSource">  
       <property name="writeDataSource" ref="dataSourceWrite"/>
       <property name="readDataSource" ref="dataSourceRead"/>
    </bean>

	<bean id="dataSource" class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy">  
        <property name="targetDataSource">
            <ref bean="dynamicDataSource"/>
        </property>
    </bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<property name="mapperLocations" value="classpath:com/coinMall/mapper/*.xml"></property>
	</bean>
	<!-- DAO接口包 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.coinMall.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!-- 事务管理 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
</beans>